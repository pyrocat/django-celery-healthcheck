version: '3.8'

services:
  web:
    build: ./project
    image: &img celery_hc
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./project:/usr/src/app/
    ports:
      - 1337:8000
    env_file: &env
      - .env
    depends_on:
      - redis

  worker:
    image: *img
    command: celery -A main worker --loglevel=info -Q "first_queue" --logfile=logs/celery.log --events
    volumes:
      - ./project:/usr/src/app
    env_file: *env
    depends_on:
      - web
      - redis

  second_worker:
    image: *img
    command: celery -A main worker --loglevel=info -Q "second_queue" --logfile=logs/celery.log --events
    volumes:
      - ./project:/usr/src/app
    env_file: *env
    depends_on:
      - web
      - redis

  beat:
    image: *img
    command: celery -A main beat --scheduler=django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./project:/usr/src/app
    env_file: *env
    depends_on:
      - redis
      - worker

  redis:
    image: redis:7-alpine

  dashboard:
    image: *img
    command: celery flower -A main --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    env_file: *env
    depends_on:
      - web
      - redis
      - worker
      - second_worker
      - beat

  healthcheck:
    image: *img
    command: python3 -m hc_methods.run_monitor
    volumes:
      - ./project:/usr/src/app
    env_file: *env
    depends_on:
      - web
      - redis
      - worker
      - second_worker
      - beat

  async_hc_server:
    build: ./server
    image: async_hc_server
    ports:
      - 9009:9001
    depends_on:
      - web
      - redis
      - worker
      - second_worker
      - beat

#  healthcheck:
#    image: *img
#    command: celery -A main events -c hc_methods.EventsCamera --frequency=2.0
#    volumes:
#      - ./project:/usr/src/app
#    env_file: *env
#    depends_on:
#      - web
#      - redis
#      - worker
#      - second_worker
#      - beat
#
